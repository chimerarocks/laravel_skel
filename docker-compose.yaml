version: '3'

services:

    app:
        build: .
        container_name: app
        restart: on-failure
        volumes:
          - .:/var/www
        networks:
          - app-network
        depends_on:
          - db

    nginx:
        build: .docker/nginx
        container_name: nginx
        restart: always
        tty: true
        ports:
          - "8000:80"
        volumes:
          - .:/var/www
        networks:
          - app-network

    redis:
        image: redis:alpine
        container_name: redis
        restart: always
        expose:
          - 6379
        networks:
          - app-network

    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: db
        restart: always
        tty: true
        ports:
          - "3306:3306"
        volumes:
          - ./.docker/dbdata:/var/lib/mysql
        environment:
          - MYSQL_DATABASE=laravel
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_USER=root
        networks:
          - app-network
        healthcheck:
          test: ["CMD", 'mysql -uroot -D laravel -proot --execute="SELECT COUNT(table_name) > 0 FROM information_schema.tables;" --skip-column-names -B']

    adminer:
        image: adminer
        container_name: adminer
        restart: always
        ports:
          - "9999:8080"
        networks:
          - app-network
        depends_on:
          - db

networks:
  app-network:
      driver: bridge